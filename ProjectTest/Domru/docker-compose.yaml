version: "3.9"
services:
  postgres:
    container_name: postgres
    image: postgres:13.3
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data

    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: "1000:1000"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - postgres


  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./grafana:/var/lib/grafana:rw
      - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD= "admin"
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_HTTP_PORT=3000
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_DOMAIN=www.grafana.io
      - GF_SERVER_ROOT_URL=https://www.grafana.io/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    expose:
      - 3000
    links:
      - prometheus
    networks:
      - postgres

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - postgres


#  node-exporter:
#    image: stefanprodan/swarmprom-node-exporter:v0.16.0
#    networks:
#      - postgres
#    restart: unless-stopped
#    environment:
#      - NODE_ID={{.Node.ID}}
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#      - /etc/hostname:/etc/nodename
#    command:
#      - '--path.sysfs=/host/sys'
#      - '--path.procfs=/host/proc'
#      - '--collector.textfile.directory=/etc/node-exporter/'
#      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
#      - '--no-collector.ipvs'
#    deploy:
#      mode: global
#      resources:
#        limits:
#          memory: 128M
#        reservations:
#          memory: 64M

#  node_exporter:
#    container_name: node_container
#    image: prom/node-exporter:latest
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    restart: unless-stopped
#    deploy:
#      resources:
#        limits:
#          cpus: '0.2'
#          memory: 500M
#    networks:
#      - postgres

#  nginx:
#    image: 'jc21/nginx-proxy-manager:latest'
#    restart: unless-stopped
#    ports:
#      # These ports are in format <host-port>:<container-port>
#      - '80:80' # Public HTTP Port
#      - '81:81' # Admin HTTP Port
#      # Add any other Stream port you want to expose
#      # - '21:21' # FTP
#      # DISABLE_IPV6: 'true'
#    environment:
#      GF_SECURITY_ADMIN_USER: "admin"
#      GF_SECURITY_ADMIN_PASSWORD: "admin"
#      GF_SERVER_ROOT_URL: "grafana:3000"
#    volumes:
#      - ./data:/data
#      - ./letsencrypt:/etc/letsencrypt
#    depends_on:
#      - grafana
#    networks:
#      - postgres

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
